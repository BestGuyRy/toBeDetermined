import java.io.*;
import java.util.*;
public class Project {
    public static void main(String[] args) throws FileNotFoundException {
        Scanner main = new Scanner(System.in);
        //files path with information or just string with information
        String majorFile = "../project/Majors.txt";
        String jobsFile = "../project/Jobs.txt";
        String salariesFile = "../project/JobsSalaries.txt";

        // Create tilt score range arrays, upper and lower.
        double[] lowerRanges = {-0.47, -0.30, -0.19, -0.18, -0.11, -0.04, -0.04, -0.01, 0.06, 0.12, 0.18, 0.27, 0.42};
        double[] upperRanges = {-0.29, -0.20, -0.19, -0.12, -0.05, -0.04, -0.02, 0.05, 0.11, 0.17, 0.26, 0.41, 0.42};

        // Create array with specific majors to match with tilt score ranges.
        String[][] specificMajors = {
                {"Classical Studies", "English", "Linguistics"},
                {"Communication"},
                {"Philosophy", "Psychology"},
                {"Anthropology", "History", "Law, Societies, and Justice", "Political Science", "Real Estate",
                        "Social Welfare", "Sociology"},
                {"Education Studies"},
                {"Art", "Art History", "Cinema & Media Studies", "Drama", "Music"},
                {"Food Systems, Nutrition, and Health", "Medical Laboratory Science", "Neuroscience", "Nursing",
                        "Public Health - Global Health"},
                {"Biochemistry", "Biology", "Marine Biology", "Microbiology"},
                {"Business Administration", "Economics"},
                {"Astronomy", "Atmospheric Sciences", "Chemistry", "Environmental Studies", "Geography", "Physics"},
                {"Computer Science", "Informatics"},
                {"Architecture", "Bioengineering", "Chemical Engineering", "Civil Engineering",
                        "Computer Science and Engineering", "Electrical Engineering", "Environmental Engineering",
                        "Industrial Engineering", "Mechanical Engineering"},
                {"Aeronautics and Astronautics", "Earth and Space Sciences", "Mathematics"}
        };

        //interactive portion
        String message = """
            Welcome!
            This program will assist you in visualizing how a college loan will affect you financially.
            You may find this information useful when determining the amount of your student loan and potential careers.
            We'll start by looking at your average Tilt Score to determine which majors you will likely excel in.
            Let's get started!
            """;
        System.out.println(message);
        
        getUserTiltScore(lowerRanges, upperRanges, specificMajors);
        String major = majorChoice(main, majorFile);
        String job = jobChoice(main, jobsFile, major);
        int salary = getSalary(salariesFile, job);
        String loanSummary = loanCalculuation(main, major, job, salary);

        //will print out all information on a final file (need to find out how to make a file)
        String finalFile = fileCreation(main);
        if (finalFile.equals("This is the end of the program.")) {
            PrintStream finalOutput = new PrintStream(new File(finalFile));
            finalOutput.print(loanSummary);
        }
    }

    //tiltScore
    public static void getUserTiltScore(double[] lowerRanges, double[] upperRanges, String[][] specificMajors) {
        Scanner console = new Scanner(System.in);
        String majorFile = "../project/Majors.txt";//This is not right.

        System.out.print("Would you like to use your average Tilt Score to determine your major? (yes/no) ");
        String response = console.nextLine();

        if (response.equalsIgnoreCase("yes")) {
            System.out.print("What is your average Tilt Score? ");
            double averageTiltScore = console.nextDouble();

            int matchingIndex = findMatchingIndex(averageTiltScore, lowerRanges, upperRanges);

            if (matchingIndex >= 0 && matchingIndex < specificMajors.length) {
                System.out.println("These are the majors that correspond to your average Tilt Score:");
                for (String major : specificMajors[matchingIndex]) {
                    System.out.println("- " + major);
                }
            } else {
                System.out.println("No matching majors found based on your average Tilt Score.");
            }
        } else if (response.equalsIgnoreCase("no")) {
            System.out.print("Would you like to see the complete list of majors? (yes/no) ");
            response = console.nextLine();

            if (response.equalsIgnoreCase("yes")) {
                System.out.println(majorFile);
            }
        }
    }
    public static int findMatchingIndex(double averageTiltScore, double[] lowerRanges, double[] upperRanges) {
        for (int i = 0; i < lowerRanges.length; i++) {
            if (averageTiltScore >= lowerRanges[i] && averageTiltScore <= upperRanges[i]) {
                return i;
            }
        }
        return -1;
    }

    // majors
    public static String majorChoice(Scanner main,String majorFile) throws FileNotFoundException {
        Scanner majors = new Scanner(new File(majorFile));
        String[] majorsChoices = new String[50]; //dependent on #majors;
        for (int j = 0; j < majorsChoices.length; j++) {
            majorsChoices[j] = majors.nextLine();
            System.out.println(majorsChoices[j]);
        }
        System.out.print("\nChosen major: ");
        String major = main.nextLine();
        int i = 0;
        while (i < majorsChoices.length) {
            if (major.equalsIgnoreCase(majorsChoices[i])) {
                major = majorsChoices[i];
                i = majorsChoices.length;
            }
            i++;
            if (i == majorsChoices.length) {
                i = 0;
                System.out.println("Invalid major inputted. Please try again and chose from the list provided.");
                System.out.print("Chosen major: ");
                major = main.nextLine();
            }
        }
        return major;
    }

    //jobs
    public static String jobChoice(Scanner main, String jobsFile, String major) throws FileNotFoundException {
        Scanner jobFile = new Scanner(new File(jobsFile));
        String jobs[] = new String[10]; //depends on #jobs following majors
        String majorInFile = "Jobs you can get with a four-year " + major + " degree:";
        //prints jobs of major
        System.out.println("\n" + majorInFile);
        while (jobFile.hasNextLine()) {
            if (jobFile.nextLine().equalsIgnoreCase(majorInFile)) {
                for (int i = 0; i < jobs.length; i++) {
                    jobs[i] = jobFile.nextLine();
                    System.out.println(jobs[i]);
                }
            }
        }
        //interacts with user to ask for them to pick a job
        System.out.print("\nWhich job interests you? ");
        String job = main.nextLine();
        int salary = 0;
        int i = 0;
        while (i < jobs.length) {
            if (job.equalsIgnoreCase(jobs[i])) {
                job = jobs[i];
                salary =
                        i = jobs.length;
            }
            i++;
            if (i == jobs.length) {
                i = 0;
                System.out.println("Invalid input. Please chose a job from the list above.");
                System.out.print("Job of Interest: ");
                job = main.nextLine();
            }
        }
        return job;
    }

    //salary
    public static int getSalary(String salariesFile, String job) throws FileNotFoundException {
        Scanner salaries = new Scanner(new File(salariesFile)); //
        while(salaries. hasNextLine()) {
            if(job.equalsIgnoreCase(salaries.nextLine())) {
                return salaries.nextInt();
            }
        }
        return 0;
    }

    // loan information
    public static String loanCalculuation(Scanner main, String major, String job, int salary) throws FileNotFoundException {
        System.out.println("\nBased on your career of interest the following prompts will provide some information on your student loan payments");
        System.out.printf("The national average yearly salary for a %s is $%d\n", job, salary);
        //loan
        System.out.print("\nStudent loan amount: $");
        while (!main.hasNextInt()){
            System.out.println("This is an invalid output. Please try again.");
            System.out.print("Student loan amount: $");
            main.nextLine();
        }
        int loanAmount = main.nextInt();

        //loan rate
        System.out.print("\nStudent loan rate (as a percent): ");
        while (!main.hasNextDouble()) {
            main.next();
            System.out.println("This is an invalid output. Please put your loan rate in as a percent (w/o the percent symbol)");
            System.out.print("Student loan rate (as a percent): ");
            main.nextLine();
        }
        double loanRate = main.nextDouble();

        //term of loan
        System.out.print("\nTerm of loan (in years): ");
        while (!main.hasNextInt()) {
            main.next();
            System.out.println("This is an invalid input. Make sure you are inputting a numerical value, no special characters.");
            System.out.print("Term of loan (in years): ");
            main.nextLine();
        }
        int loanTerm = main.nextInt();

        // calculation monthly loan payment
        double loanMonthlyPay = loanRate / 12.0/100 * (loanAmount / (1 - (1 / Math.pow(1 + loanRate / 12.0/100, loanTerm * 12))));
        double loanPercentSalary = loanMonthlyPay *12/ salary * 100;
        String loanSummary = "Major: " + major + "\nChosen job: " + job + "\nAverage yearly salary: " + salary
                + "\nLoan: " + loanAmount + "\nInterest rate: " + roundingTenths(loanRate) + "\nTerm of loan: " + loanTerm
                + " years" + "\nMonthly loan payment: $" + roundingTenths(loanMonthlyPay) + "\nPercent of monthly salary going towards loan: "
                + roundingTenths(loanPercentSalary);
        System.out.println("\nSummary of provided information: " + loanSummary);
        return loanSummary;
    }
    public static double roundingTenths(double numberToRound) {
        return (int) Math.round(numberToRound*100)/100.0;
    }

    //final file output
    public static String fileCreation(Scanner main) throws FileNotFoundException {
        System.out.print("Do you want a copy of this information stored on a separate file? ");
        String response = main.next();
        while (!response.equalsIgnoreCase("yes") && !response.equalsIgnoreCase("no")) {
            System.out.println("Invalid response (yes/no) ");
            System.out.print("Do you want a copy of this information stored on a separate file? ");
            response = main.next();
        }
        if (response.equalsIgnoreCase("yes")) {
            System.out.print("Type in a file name: "); // user error for file names
            String outputFileName = main.next() + ".txt";
            while ((outputFileName.indexOf('@') != -1) || (outputFileName.indexOf('$') != -1) || (outputFileName.indexOf('%') != -1) || (outputFileName.indexOf('&') != -1) ||
                    (outputFileName.indexOf('\\') != -1) || (outputFileName.indexOf('/') != -1) || (outputFileName.indexOf(':') != -1) ||
                    (outputFileName.indexOf('*') != -1) || (outputFileName.indexOf('?') != -1) || (outputFileName.indexOf('\"') != -1) ||
                    (outputFileName.indexOf('\'') != -1) || (outputFileName.indexOf('<') != -1) || (outputFileName.indexOf('>') != -1) ||
                    (outputFileName.indexOf('|') != -1) || (outputFileName.indexOf('~') != -1) || (outputFileName.indexOf('`') != -1) ||
                    (outputFileName.indexOf('#') != -1) || (outputFileName.indexOf('^') != -1) || (outputFileName.indexOf('+') != -1) ||
                    (outputFileName.indexOf('=') != -1) || (outputFileName.indexOf('{') != -1) || (outputFileName.indexOf('}') != -1) ||
                    (outputFileName.indexOf('[') != -1) || (outputFileName.indexOf(']') != -1) || (outputFileName.indexOf(';') != -1) || (outputFileName.indexOf('!') != -1)) { // have to account for special characters;
                System.out.println("Invalid file name.");
                System.out.print("Do you want information on proper file names? yes/no ");
                String answerFileInfo = main.next();
                if (answerFileInfo.equalsIgnoreCase("yes")) {
                    System.out.println("\nAllowed: \nletters, number, (), _, -, , ,, .");
                    System.out.println("\nNot Allowed: \n*spaces\n*Special Characters: @, $, %, &, \\, /, :, *, ?, \"," +
                            " ', <, >, |, ~, `, #, ^, +, =, {, }, [, ], ;, !\n");
                }
                System.out.print("Type in a file name: ");
                outputFileName = main.next();
            }
            return outputFileName;
        }
        return "This is the end of the program.";
    }
}
